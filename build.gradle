group 'de.kontext_e.blueprints'
version '1.0-SNAPSHOT'

apply plugin: 'java'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

project.ext["jqaversion"] = "1.2.0"
project.ext["jqapluginversion"] = "1.2"
configurations {
    jqaRuntime
}
dependencies {
    jqaRuntime("com.buschmais.jqassistant:jqa-uber-parent:${project.jqaversion}")
    jqaRuntime("com.buschmais.jqassistant:jqassistant.plugin.plugin-parent:${project.jqaversion}")
    jqaRuntime("com.buschmais.jqassistant.core:plugin:${project.jqaversion}")
    jqaRuntime("com.buschmais.jqassistant.core:scanner:${project.jqaversion}")
    jqaRuntime("com.buschmais.jqassistant.core:report:${project.jqaversion}")
    jqaRuntime("com.buschmais.jqassistant.core:store:${project.jqaversion}")
    jqaRuntime("com.buschmais.jqassistant.core:shared:${project.jqaversion}")
    jqaRuntime("com.buschmais.jqassistant.plugin:common:${project.jqaversion}")
    jqaRuntime("com.buschmais.jqassistant:commandline:${project.jqaversion}")
    jqaRuntime("com.buschmais.jqassistant:neo4jserver:${project.jqaversion}")

    jqaRuntime("com.buschmais.jqassistant.plugin:java:${project.jqapluginversion}")
    jqaRuntime("com.buschmais.jqassistant.plugin:junit:${project.jqapluginversion}")
}

task removeJQAReport(type: Delete) {
    delete 'jqassistant/report'
    delete 'jqassistant/store'
}

task(jqascan, dependsOn: 'removeJQAReport', type: JavaExec) {
    main = 'com.buschmais.jqassistant.commandline.Main'
    classpath = configurations.jqaRuntime
    args 'scan'
    args '-p'
    args 'jqassistant/jqassistant.properties'
    args '-f'

    args 'java:classpath::build/classes/main'
    args 'java:classpath::build/classes/test'

    /* in a multi subprojects project it would be:
    rootProject.subprojects {
        args 'java:classpath::'+it.name+'/build/classes/main'
        args 'java:classpath::'+it.name+'/build/classes/test'
    }
    */
}

task(jqaanalyze, type: JavaExec) {
    main = 'com.buschmais.jqassistant.commandline.Main'
    classpath = configurations.jqaRuntime
    args 'analyze'
    args '-r'
    args 'jqassistant/jqassistant-rules'
}

task(jqa, dependsOn: ['jqascan','jqaanalyze']) {
    jqaanalyze.mustRunAfter jqascan
}

task(jqs, type: JavaExec) {
    main = 'com.buschmais.jqassistant.commandline.Main'
    classpath = configurations.jqaRuntime
    args 'server'
    standardInput = System.in
}

clean.dependsOn removeJQAReport
